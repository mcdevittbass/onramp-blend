[{"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/index.tsx":"1","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/Main.tsx":"2","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/PostList.tsx":"3","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/App.tsx":"4","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/Search.tsx":"5","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/WritePost.tsx":"6","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/WriteButton.tsx":"7","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/PostById.tsx":"8","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/reportWebVitals.ts":"9","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/ReturnHome.tsx":"10","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/auth/Login.tsx":"11","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/FavoriteCheckBox.tsx":"12","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/FavoriteIcon.tsx":"13","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/TrashIcon.tsx":"14","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/auth/Landing.tsx":"15"},{"size":547,"mtime":1611251633327,"results":"16","hashOfConfig":"17"},{"size":1460,"mtime":1611443012482,"results":"18","hashOfConfig":"17"},{"size":2014,"mtime":1611443054383,"results":"19","hashOfConfig":"17"},{"size":1488,"mtime":1611443757161,"results":"20","hashOfConfig":"17"},{"size":2817,"mtime":1611426657859,"results":"21","hashOfConfig":"17"},{"size":5242,"mtime":1611411685077,"results":"22","hashOfConfig":"17"},{"size":511,"mtime":1611442736500,"results":"23","hashOfConfig":"17"},{"size":1688,"mtime":1611441815481,"results":"24","hashOfConfig":"17"},{"size":425,"mtime":1611175795640,"results":"25","hashOfConfig":"17"},{"size":476,"mtime":1611337926157,"results":"26","hashOfConfig":"17"},{"size":2809,"mtime":1611443184995,"results":"27","hashOfConfig":"17"},{"size":1136,"mtime":1611426613876,"results":"28","hashOfConfig":"17"},{"size":1643,"mtime":1611429913132,"results":"29","hashOfConfig":"17"},{"size":1087,"mtime":1611442918542,"results":"30","hashOfConfig":"17"},{"size":255,"mtime":1611443504409,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"qy9wzv",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/index.tsx",[],["69","70"],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/Main.tsx",[],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/PostList.tsx",[],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/App.tsx",["71"],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/Search.tsx",["72"],"import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Col, Row, FormGroup, Label } from 'reactstrap';\nimport { IBlogPost } from '../../App';\n\ntype TSearchProps = { \n    blogData: IBlogPost[], \n    setList: (list:React.SetStateAction<IBlogPost[]>)=>void \n};\n\nconst Search = ({ blogData, setList } :TSearchProps) => {\n    const [selected, setSelected] = useState<string>('title');\n    const [selectedValue, setSelectedValue] = useState<string>('');\n\n\n    const handleChangeParam = (e: React.ChangeEvent<HTMLInputElement>):void => {\n        setSelectedValue('');\n        let paramValue = e.target.value;\n        setSelected(paramValue);\n    }\n\n    const handleSetParamValue = (e: React.ChangeEvent<HTMLInputElement>):void => {\n        e.preventDefault();\n        setSelectedValue(e.target.value);\n    }\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>):void => {\n        e.preventDefault();\n        if(selectedValue.length > 0) {\n            switch(selected) {\n                case 'title':\n                    const titleFilter:IBlogPost[] = blogData.filter((blog:IBlogPost) => {\n                        return blog.title.toLowerCase().includes(selectedValue.toLowerCase()); \n                    });\n                    setList(titleFilter);\n                    break;\n                case 'author':\n                    const authorFilter:IBlogPost[] = blogData.filter((blog:IBlogPost) => {\n                        return blog.author.toLowerCase().includes(selectedValue.toLowerCase()); \n                    });\n                    setList(authorFilter);\n                    break;\n                default:\n                    console.error(\"There was a problem with the select element.\")\n            }\n        } else {\n            setList(blogData);\n        }\n    }\n\n    return (\n        <Col>\n            <Form className='m-4 p-2 w-100' onSubmit={handleSubmit} inline>\n                <Row>\n                    <FormGroup>\n                        <Label for='searchParam' className='mr-2'>Search by </Label>\n                        <Input type='select' name='searchParam' id='searchParam' onChange={handleChangeParam}>\n                            <option value='title'>Title</option>\n                            <option value='author'>Author</option>\n                        </Input>\n                    </FormGroup>\n                    <FormGroup className='m-2'>\n                        <Input type='text' id={selected} name={selected} value={selectedValue} onChange={handleSetParamValue} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Button type='submit' className='btn btn-success m-2'>Search</Button>\n                    </FormGroup>\n                </Row>\n            </Form>\n        </Col>\n    )\n}\n\nexport default Search;","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/WritePost.tsx",[],["73","74"],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/WriteButton.tsx",[],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/PostById.tsx",["75","76","77"],"import React, { SetStateAction, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, CardText, CardTitle, CardSubtitle, CardBody, Row, Col} from 'reactstrap';\nimport { Header } from './Main';\nimport { IBlogPost } from '../../App';\nimport { dateSwitcharoo } from './PostList';\nimport FavoriteIcon from './FavoriteIcon';\nimport TrashIcon from './TrashIcon';\nimport { IMainProps } from './Main';\n\n\ntype TParam = { blogId: string };\n\nconst Post = ({ blogData, list, setList, favorites, setFavorites }:IMainProps) => {\n\n    const { blogId }:TParam = useParams();\n\n    //an array with one object in it (blogIds must be unique)\n    const currentBlog:IBlogPost[] = blogData.filter((blog: IBlogPost) => {\n        let blogNumId = parseInt(blogId);\n        return blog.blogId == blogNumId;\n    });\n    const thisBlog = currentBlog[0];\n\n    return (\n        <>\n            <Header />\n            <Card>\n                <CardBody>\n                    <CardTitle tag='h4'>{thisBlog.title}</CardTitle>\n                    <CardSubtitle tag='h5'>Written by {thisBlog.author}</CardSubtitle>\n                    <Row className='justify-content-between'>\n                        <CardText>{dateSwitcharoo(thisBlog.date)}</CardText>\n                        <Col>\n                            <FavoriteIcon post={thisBlog} favorites={favorites} setFavorites={setFavorites}/>\n                            <TrashIcon post={thisBlog} list={list} setList={setList}/>\n                        </Col>\n                    </Row>\n                    <CardText>{currentBlog[0].fullText}</CardText>\n                </CardBody>\n            </Card>\n        </>\n    )\n}\n\nexport default Post;","/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/reportWebVitals.ts",[],["78","79"],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/ReturnHome.tsx",[],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/auth/Login.tsx",["80","81"],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/FavoriteCheckBox.tsx",["82"],"import React, { useState } from 'react';\nimport { Col, Button, FormGroup, Label, Input } from 'reactstrap';\nimport { IBlogPost } from '../../App';\n\ntype TFaveProps = { \n    blogData: IBlogPost[],\n    favorites: IBlogPost[],\n    setList: (list:React.SetStateAction<IBlogPost[]>)=>void \n}\n\nconst FavoriteCheckBox = ({ blogData, setList, favorites }:TFaveProps) => {\n    const [checked, setChecked] = useState('');\n    \n    const handleShowFavorites = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        let checkValue = event.target.value;\n        if(checkValue.length < 1) {\n            setChecked('fave');\n            setList(favorites);\n        } else {\n            setChecked('');\n            setList(blogData);\n        }\n    }\n\n    return (\n        <Col className='col-12 m-2 m-md-0 col-md-3 text-center'>\n            <FormGroup check>\n                <Label check>\n                    <Input type='checkbox' name='fave' value={checked} onChange={handleShowFavorites}></Input>\n                    Show My Favorites\n                </Label>\n            </FormGroup>\n        </Col>\n    )\n}\n\nexport default FavoriteCheckBox;",["83","84"],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/FavoriteIcon.tsx",[],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/blog/TrashIcon.tsx",[],"/Users/homesweethome/Documents/Coding-Projects/Job-App-Projects/onramp-fullstack-CRUD-project-main/client/src/components/auth/Landing.tsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":25,"column":20,"nodeType":"91","messageId":"92","endLine":25,"endColumn":31},{"ruleId":"89","severity":1,"message":"93","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"85","replacedBy":"94"},{"ruleId":"87","replacedBy":"95"},{"ruleId":"89","severity":1,"message":"96","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":31},{"ruleId":"89","severity":1,"message":"93","line":1,"column":33,"nodeType":"91","messageId":"92","endLine":1,"endColumn":42},{"ruleId":"97","severity":1,"message":"98","line":21,"column":28,"nodeType":"99","messageId":"100","endLine":21,"endColumn":30},{"ruleId":"85","replacedBy":"101"},{"ruleId":"87","replacedBy":"102"},{"ruleId":"89","severity":1,"message":"103","line":6,"column":19,"nodeType":"91","messageId":"92","endLine":6,"endColumn":27},{"ruleId":"89","severity":1,"message":"104","line":7,"column":22,"nodeType":"91","messageId":"92","endLine":7,"endColumn":33},{"ruleId":"89","severity":1,"message":"105","line":2,"column":15,"nodeType":"91","messageId":"92","endLine":2,"endColumn":21},{"ruleId":"85","replacedBy":"106"},{"ruleId":"87","replacedBy":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'setBlogData' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["108"],["109"],"'SetStateAction' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["108"],["109"],"'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'Button' is defined but never used.",["108"],["109"],"no-global-assign","no-unsafe-negation"]